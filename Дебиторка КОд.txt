<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="styles.css">
	<title>Your Page Title</title>
	<script src="index.js"></script>
</head>

<body>

	<div class="wrapper">
		<h3>Товар</h3>
		<div class="forms" id="productForms">
			<!-- Initial form for adding products -->
			<div class="form">
				<form>
					<label for="productName">Наименование товара</label>
					<input type="text" name="productName" required oninput="recalculateTotalAmount()">
					<label for="quantity">Количество </label>
					<input type="text" name="quantity" pattern="\d+" title="Введите положительное число" required
						oninput="validateInput(this); recalculateTotalAmount()">
					<div class="error" id="quantityError"></div>
					<label for="price">Цена</label>
					<input type="text" name="price" pattern="\d+(\.\d{1,2})?" title="Введите положительное число"
						required oninput="validateInput(this); recalculateTotalAmount()">
					<div class="error" id="priceError"></div>
					<button type="button" class="add-button" onclick="addProduct()">+ Добавить товар</button>
				</form>
			</div>
		</div>

		<div class="total-section">
			<h4>Итого:</h4>
			<p>Общая сумма товаров: <span id="totalAmount">0</span></p>
			<div>
				<label for="initialPaymentInput">Первоначальный взнос:</label>
				<input type="number" id="initialPaymentInput" min="0" step="0.01"
					oninput="validateInput(this); recalculateTotalAmount()">
				<div class="error" id="initialPaymentError"></div>
			</div>
			<p>Сумма долга: <span id="debtAmount">0</span></p>

			<!-- Добавлен элемент для отображения первоначального взноса -->
			<p>Первоначальный взнос: <span id="initialPayment">0</span></p>

			<div id="debtError" class="error" style="color: red; display: none;">Сумма долга не может быть меньше 0
			</div>
		</div>

	</div>



</body>

</html>










---------------------------------------------------------------------------------




function validateInput(input) {
	var errorDiv = input.nextElementSibling;
	var value = parseFloat(input.value);

	if (isNaN(value) || value < 0) {
		errorDiv.textContent = "Введите положительное число";
		input.value = ""; // Очищаем поле отрицательного значения
	} else {
		errorDiv.textContent = "";
	}
}
function addProduct() {
	var productForms = document.getElementById("productForms");

	var form = document.createElement("div");
	form.classList.add("form");

	form.innerHTML = `
        <form>
            <label for="productName">Наименование товара</label>
            <input type="text" name="productName">
            <label for="quantity">Количество </label>
            <input type="text" name="quantity" pattern="\d+" title="Введите положительное число" required oninput="validateInput(this); recalculateTotalAmount()">
            <div class="error" id="quantityError"></div>
            <label for="price">Цена</label>
            <input type="text" name="price" pattern="\d+(\.\d{1,2})?" title="Введите положительное число" required oninput="validateInput(this); recalculateTotalAmount()">
            <div class="error" id="priceError"></div>
            <button type="button" class="remove-button" onclick="removeProduct(this)">Х</button>
        </form>
    `;

	// Добавляем слушатель событий к кнопке "Х"
	var removeButton = form.querySelector(".remove-button");
	removeButton.addEventListener("click", function () {
		productForms.removeChild(form);
		recalculateTotalAmount();
	});

	// Добавляем новую форму к контейнеру
	productForms.appendChild(form);

	// Пересчитываем общую сумму после добавления товара
	recalculateTotalAmount();
}

function removeProduct(button) {
	var form = button.parentNode;
	form.parentNode.removeChild(form);
	recalculateTotalAmount();
}

function recalculateTotalAmount() {
	var totalAmountElement = document.getElementById("totalAmount");
	var initialPaymentInput = document.getElementById("initialPaymentInput");
	var debtAmountElement = document.getElementById("debtAmount");
	var debtErrorElement = document.getElementById("debtError");
	var initialPaymentErrorElement = document.getElementById("initialPaymentError");
	var forms = document.querySelectorAll(".form");

	var totalAmount = 0;

	forms.forEach(function (form) {
		var quantity = parseFloat(form.querySelector('[name="quantity"]').value) || 0;
		var price = parseFloat(form.querySelector('[name="price"]').value) || 0;
		totalAmount += quantity * price;
	});

	totalAmountElement.textContent = totalAmount.toFixed(2);

	var initialPayment = parseFloat(initialPaymentInput.value) || 0;

	// Проверяем первоначальный взнос на отрицательное значение
	if (initialPayment < 0) {
		initialPaymentErrorElement.textContent = "Введите положительное число";
		initialPaymentInput.value = ""; // Очищаем поле отрицательного значения
	} else {
		initialPaymentErrorElement.textContent = "";
	}

	document.getElementById("initialPayment").textContent = initialPayment.toFixed(2);

	var debtAmount = totalAmount - initialPayment;

	// Проверяем сумму долга на отрицательное значение
	if (debtAmount < 0) {
		debtErrorElement.style.display = "block";
		debtAmountElement.textContent = "0.00";
	} else {
		debtErrorElement.style.display = "none";
		debtAmountElement.textContent = debtAmount.toFixed(2);
	}
}


--------------------------------------------------------------------------------


body {
	font-family: Arial, sans-serif;
	margin: 0;
	padding: 0;
	background-color: #f4f4f4;
}

.wrapper {
	max-width: 600px;
	margin: 20px auto;
	background-color: #fff;
	padding: 20px;
	border-radius: 8px;
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h3 {
	margin-top: 0;
}

.forms {
	margin-bottom: 20px;
}

.form {
	margin-bottom: 10px;
}

form {
	display: grid;
	gap: 10px;
}

label {
	font-weight: bold;
}

input {
	width: 100%;
	padding: 8px;
	box-sizing: border-box;
	border: 1px solid #ddd;
	border-radius: 4px;
}

button {
	background-color: #4caf50;
	color: #fff;
	padding: 10px;
	border: none;
	border-radius: 4px;
	cursor: pointer;
}

button:hover {
	background-color: #45a049;
}

.total-section {
	border-top: 2px solid #ddd;
	padding-top: 20px;
}

.error {
	color: #ff0000;
	font-size: 14px;
}
